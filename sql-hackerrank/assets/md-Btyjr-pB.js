import{b as r,o as s,w as u,g as e,ad as l,v as i,x as d,T as n}from"./modules/vue-Brt4Jmdj.js";import{I as m}from"./slidev/default-DFTVA0uF.js";import{u as c,f as p}from"./slidev/context-DoDtexGT.js";import"./index-LcJYzqeS.js";import"./modules/shiki-DjReAoEM.js";const C={__name:"sql-hackerrank.md__slidev_7",setup(_){const{$clicksContext:a,$frontmatter:o}=c();return a.setup(),(b,t)=>(s(),r(m,i(d(n(p)(n(o),6))),{default:u(()=>t[0]||(t[0]=[e("h3",null,"üõ†Ô∏è Breakdown",-1),e("ul",null,[e("li",null,[e("code",null,"@row := @row + 1"),l(": Simulates a "),e("strong",null,"counter"),l(" to generate numbers 1 to 1000.")]),e("li",null,[e("code",null,"CROSS JOIN information_schema.tables t2"),l(": Creates a "),e("strong",null,"huge virtual table"),l(" to simulate looping behavior.")]),e("li",null,[e("strong",null,"Subquery 1 (candidate_numbers)"),l(": "),e("ul",null,[e("li",null,"Generates candidate numbers from 1 to 1000 using the simulated loop.")])]),e("li",null,[e("strong",null,"Subquery 2 (numbers)"),l(": "),e("ul",null,[e("li",null,"For each candidate, checks for all numbers less than it that could divide it.")])]),e("li",null,[e("code",null,"NOT EXISTS (...)"),l(": If any number divides the candidate ‚Üí it‚Äôs "),e("strong",null,"not prime"),l(", so exclude it.")]),e("li",null,[e("code",null,"GROUP_CONCAT"),l(": Combines all valid primes into a single string, separated by "),e("code",null,"&"),l(".")])],-1)])),_:1,__:[0]},16))}};export{C as default};
